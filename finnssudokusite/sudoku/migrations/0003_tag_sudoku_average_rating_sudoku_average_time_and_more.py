# Generated by Django 5.2 on 2025-04-20 10:57

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("sudoku", "0002_remove_sudoku_rating_usersudokustats_attempts_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.AddField(
            model_name="sudoku",
            name="average_rating",
            field=models.FloatField(default=0.0),
        ),
        migrations.AddField(
            model_name="sudoku",
            name="average_time",
            field=models.FloatField(default=0.0),
        ),
        migrations.AddField(
            model_name="sudoku",
            name="created_at",
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AddField(
            model_name="sudoku",
            name="difficulty",
            field=models.CharField(blank=True, max_length=50),
        ),
        migrations.AddField(
            model_name="sudoku",
            name="is_public",
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name="sudoku",
            name="last_attempted",
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="sudoku",
            name="puzzle_string",
            field=models.TextField(
                default="000000000000000000000000000000000000000000000000000000000000000000000000000000000"
            ),
        ),
        migrations.AddField(
            model_name="sudoku",
            name="ratings_count",
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name="sudoku",
            name="solution_string",
            field=models.TextField(
                default="000000000000000000000000000000000000000000000000000000000000000000000000000000000"
            ),
        ),
        migrations.AddField(
            model_name="usersudokustats",
            name="comment",
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name="usersudokustats",
            name="last_time",
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name="usersudokustats",
            name="rating",
            field=models.PositiveSmallIntegerField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name="sudoku",
            name="created_by",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="sudokus_created",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name="usersudokustats",
            name="sudoku",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="user_stats",
                to="sudoku.sudoku",
            ),
        ),
        migrations.AlterField(
            model_name="usersudokustats",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="sudoku_stats",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="sudoku",
            name="tags",
            field=models.ManyToManyField(
                blank=True, related_name="sudokus", to="sudoku.tag"
            ),
        ),
    ]
